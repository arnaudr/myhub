#cloud-config
# vim: syntax=yaml
# flash --userdata user-data.yaml hypriotos-rpi-v1.9.0.img

# Set your hostname here, the manage_etc_hosts will update the hosts file entries as well
hostname: dc1-pod1
manage_etc_hosts: true

# This expands the root volume to the entire SD Card, similar to what the raspbian images did on first boot.
# This doesn't seem to be required, its more here for posterity in understanding what is going on
resize_rootfs: true
growpart:
    mode: auto
    devices: ["/"]
    ignore_growroot_disabled: false

# You could modify this for your own user information
users:
  - name: arnaud
    gecos: "Home Cloud Owner"
    sudo: ALL=(ALL) NOPASSWD:ALL
    shell: /bin/bash
    groups: users,docker,video
    plain_text_passwd: arnaud
    lock_passwd: false
    ssh_pwauth: true
    chpasswd: { expire: false }

# Update our packages on first boot, saves us some time
package_update: true
package_upgrade: true
package_reboot_if_required: true

# Install any additional packages you need here
# I add ntp because.. without it, rpi is useless in keeping track of time.
packages:
  - ntp

# Set the locale of the system
locale: "en_US.UTF-8"

# Set the timezone
# Value of 'timezone' must exist in /usr/share/zoneinfo
timezone: "Europe/Paris"

# Tell docker to tag this node appropriately
# Currently we need the experimental?
write_files:
    - path: "/etc/docker/daemon.json"
      owner: "root:root"
      content: |
        {
          "labels": [ "os=linux", "arch=arm64" ],
          "experimental": true
        }

output:
    init:
        output: "> /var/log/cloud-init/cloud-init.out"
        error: "> /var/log/cloud-init/cloud-init.err"
    config: "tee -a /var/log/cloud-init/cloud-config.log"
    final:
        - ">> /var/log/cloud-init/cloud-final.out"
        - "/var/log/cloud-init/cloud-final.err"

# These commands will be ran once on first boot only
runcmd:
  # Pickup the hostname changes
  - [ systemctl, restart, avahi-daemon ]
  
  # install rc local service
  - [systemctl, enable, rc-local.service ]
  
  # Update Etc Hosts  
  - [echo 192.168.1.202 dc1-pod2 dc1-pod2 >> /etc/hosts ]

  # install ip_vs kernel module for later use with keepalived
  - [echo "ip_vs" | sudo tee -a /etc/modules ]
  - [modprobe ip_vs ]
  
  # Pickup the daemon.json changes
  - [ systemctl, restart, docker ]
 
  # install keepalived
  - [  
     docker, run,
     "-d", 
     "-e KEEPALIVED_PRIORITY=100", 
     "-e KEEPALIVED_VIRTUAL_IP=192.168.1.200", 
     "--net=host", 
     "--restart=always", 
     "--privileged=true", 
     "angelnu/keepalived:latest-arm"
    ]
    
  # Init a swarm, because why not
  - [docker, swarm, init ]
  
  # Run portainer, so we can see our logs and control stuff from a UI
  - [
      docker, service, create, 
      "--detach=false", 
      "--name", "portainer", 
      "--publish", "9000:9000", 
      "--mount", "type=volume,src=portainer_data,dst=/data", 
      "--mount", "type=bind,src=//var/run/docker.sock,dst=/var/run/docker.sock", 
      "portainer/portainer", "-H", "unix:///var/run/docker.sock", "--no-auth"
    ]